// schema.prisma

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl", "linux-musl-arm64-openssl-3.0.x"]
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model User {
  id            String    @id @default(uuid())
  firstName     String?
  lastName      String?
  name          String?
  image         String?
  emailVerified DateTime?
  email         String    @unique
  password      String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  accounts Account[]
  sessions Session[]
}

model Account {
  id                String @id @default(uuid())
  type              String
  provider          String
  providerAccountId String

  refresh_token String? @map("refresh_token")
  access_token  String? @map("access_token")
  expires_at    Int?    @map("expires_at")
  token_type    String? @map("token_type")
  scope         String?
  id_token      String? @map("id_token")
  session_state String? @map("session_state")

  userId String @map("user_id")
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}
